# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type DevOptions {
  main: String
  microAppOptions: MicroAppOptions
}

input DevOptionsInput {
  main: String
  microAppOptions: MicroAppOptionsInput
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input LoginInput {
  id: String!
  name: String!
}

type MenuConfig {
  enabled: Boolean
  menus: JSON
}

input MenuConfigInput {
  enabled: Boolean
  menus: JSON
}

type MicroAppOptions {
  disableSandbox: Boolean!
  inline: Boolean!
  shadowDOM: Boolean!
}

input MicroAppOptionsInput {
  disableSandbox: Boolean!
  inline: Boolean!
  shadowDOM: Boolean!
}

type Mutation {
  addStar(appKey: String!): StarActionResult!
  createApp(app: NewAppInput!): app!
  deleteApp(key: String!): app!
  login(input: LoginInput!): Token!
  removeStar(appKey: String!): StarActionResult!
  updateApp(app: UpdateAppInput!): app!
  updateStar(type: String!, updateStarredList: [UpdateStarInput!]!): StarActionsResult!
}

input NewAppInput {
  classification: String!
  devOptions: DevOptionsInput
  disabled: Boolean
  icon: String!
  isBaseApp: Boolean
  key: String!
  label: String!
  menuConfig: MenuConfigInput
  path: String!
}

type PaginatedApp {
  data: [app!]
  totalCount: Int!
}

type Query {
  app(key: String!): app!
  apps(disabled: Boolean, key: String, pageInfo: pageInfo): PaginatedApp!
  user: user!
}

type StarActionResult {
  starrable: starrable!
}

type StarActionsResult {
  starrable: [starrable!]!
}

type Token {
  token: String!
}

input UpdateAppInput {
  classification: String
  devOptions: DevOptionsInput
  disabled: Boolean
  icon: String
  isBaseApp: Boolean
  key: String!
  label: String
  menuConfig: MenuConfigInput
  path: String
}

input UpdateStarInput {
  index: Float!
  starrableId: String!
}

"""app"""
type app {
  classification: String!
  devOptions: DevOptions
  disabled: Boolean!
  icon: String!
  isBaseApp: Boolean!
  key: ID!
  label: String!
  menuConfig: MenuConfig
  path: String!
}

input pageInfo {
  page: Float!
  size: Float!
}

union starrable = app

"""user"""
type user {
  id: ID!
  name: String!
  starredApps(pageInfo: pageInfo): [app!]!
}
